version: 2

defaults: &defaults
  resource_class: large
  working_directory: ~/code
  docker:
  - image: circleci/android:api-28
  environment:
    JVM_OPTS: -Xmx3200m

jobs:
  build:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Run Staging
        command: ./gradlew assembleDebug
    - store_artifacts:
        path: app/build/outputs/apk/debug
        destination: apk
    - run:
        name: Run Test APK
        command: ./gradlew assembleAndroidTest
    - store_artifacts:
        path: app/build/outputs/apk/androidTest/debug
        destination: apk
    - run:
        name: Run Signing Report
        command: ./gradlew signingReport
    - run:
        name: Post message to Circle.ci
        command: |
          export GIT_COMMIT_DESC=$(git log --format=oneline -n 1 | sed -E 's/^[^ ]+ (.*)$/\1/g')
          echo "{"channel": "random", "text": "Build number is: ${SLACK_TOKEN}, the URL: https://circleci.com/gh/barges/purpleocean-android/${CIRCLE_BUILD_NUM},\nCommit message: -${GIT_COMMIT_DESC}", "attachments": [{ "color": "#36a64f", "title": "PG-STAGING", "title_link": "https://${CIRCLE_BUILD_NUM}-47702162-gh.circle-artifacts.com/0/apk/app-pg_staging-release.apk" }, { "color": "#36a64f", "title": "PG-PROD", "title_link": "https://${CIRCLE_BUILD_NUM}-47702162-gh.circle-artifacts.com/0/apk/app-pg_production-release.apk"}, {"color": "#36a64f", "title": "PO-STAGING","title_link": "https://${CIRCLE_BUILD_NUM}-47702162-gh.circle-artifacts.com/0/apk/app-staging-release.apk"},{"color": "#36a64f","title": "PO-PROD","title_link": "https://${CIRCLE_BUILD_NUM}-47702162-gh.circle-artifacts.com/0/apk/app-production-release.apk"}]}" > ${HOME}/json_body.json
          echo $(cat ${HOME}/json_body.json)
          echo $GIT_COMMIT_DESC
          echo ${CIRCLE_BUILD_NUM}
          curl --header "Content-Type: application/json" \
          --header "Authorization: Bearer $SLACK_TOKEN" \
          --request POST \
          --data "@${HOME}/json_body.json" \
          https://slack.com/api/chat.postMessage?channel=random

  build_cron:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Run Staging
        command: ./gradlew assembleDebug
    - store_artifacts:
        path: app/build/outputs/apk/debug
        destination: apk
    - run:
        name: Run Test APK
        command: ./gradlew assembleAndroidTest
    - store_artifacts:
        path: app/build/outputs/apk/androidTest/debug
        destination: apk
    - run:
        name: Decode firebase client-secret.json
        command: echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/client-secret.json
    - run:
        name: Auth firebase service account
        command: sudo gcloud beta auth activate-service-account firebase-adminsdk-ii296@testlab-4372f.iam.gserviceaccount.com --key-file ${HOME}/client-secret.json
    - run:
        name: Set firebase account
        command: sudo gcloud beta config set account firebase-adminsdk-ii296@testlab-4372f.iam.gserviceaccount.com
    - run:
        name: Set firebase project
        command: sudo gcloud beta config set project testlab-4372f
    - run:
        name: Starting robo test
        command: sudo gcloud beta firebase test android run --app app/build/outputs/apk/debug/app-debug.apk --type robo --device model=Nexus6,version=25 --robo-directives ignore:message=,ignore:description= --timeout 2m
    - run:
        name: Run Signing Report
        command: ./gradlew signingReport

workflows:
  version: 2
  simple_build:
    jobs:
    - build:
        filters:
          branches:
            only:
            - master
  minutly:
    triggers: #use the triggers key to indicate a scheduled build
    - schedule:
        cron: "0 10,12 * * 0,6" # use cron syntax to set the schedule
        filters:
          branches:
            only:
            - master
    jobs:
    - build_cron
